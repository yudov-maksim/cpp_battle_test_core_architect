---
# https://clang.llvm.org/docs/ClangFormatStyleOptions.html
Language: Cpp
Standard: c++20
ColumnLimit: 120
UseTab: Always
TabWidth: 4
IndentWidth: 4
ContinuationIndentWidth: 4
DisableFormat: false
InsertNewlineAtEOF: true
RemoveSemicolon: true

# Braces
InsertBraces: true
Cpp11BracedListStyle: true
BreakBeforeBraces: Custom
BraceWrapping:
  AfterCaseLabel:  true
  AfterClass:      true
  AfterControlStatement: Always
  AfterEnum:       true
  AfterFunction:   true
  AfterNamespace:  true
  AfterObjCDeclaration: true
  AfterStruct:     true
  AfterUnion:      true
  AfterExternBlock: true
  BeforeCatch:     true
  BeforeElse:      true
  BeforeLambdaBody: true
  BeforeWhile:     true
  IndentBraces:    false
  SplitEmptyFunction: false
  SplitEmptyRecord: false
  SplitEmptyNamespace: false

# Short blocks (Braces)
AllowShortBlocksOnASingleLine: Never
AllowShortCaseLabelsOnASingleLine: true
AllowShortFunctionsOnASingleLine: Empty
AllowShortLambdasOnASingleLine: Inline
AllowShortIfStatementsOnASingleLine: Never
AllowShortLoopsOnASingleLine: false
CompactNamespaces: false

# General Breaks
AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: true
AlwaysBreakTemplateDeclarations: Yes
BreakBeforeBinaryOperators: All
BreakBeforeTernaryOperators: true
BreakStringLiterals: false
KeepEmptyLinesAtTheStartOfBlocks: false
MaxEmptyLinesToKeep: 1
BreakAfterAttributes: Always
SeparateDefinitionBlocks: Always
BreakBeforeConceptDeclarations: Always

# Breaks penalty (how many characters that go beyond limit can be forgiven for this case)
PenaltyBreakFirstLessLess: 120
PenaltyReturnTypeOnItsOwnLine: 200
PenaltyBreakComment: 300
PenaltyBreakString: 1000
PenaltyExcessCharacter: 1000000
PenaltyBreakAssignment: 2
PenaltyBreakBeforeFirstCallParameter: 1
PenaltyBreakTemplateDeclaration: 10
ReflowComments:  false

# General Align
AlignOperands: true
PointerAlignment: Left
ReferenceAlignment: Left
QualifierAlignment: Left
AlignTrailingComments: true
AlignConsecutiveAssignments:
  Enabled: false
AlignConsecutiveDeclarations:
  Enabled: false
DerivePointerAlignment: false
IndentCaseLabels: true
IndentPPDirectives: BeforeHash
RequiresClausePosition: OwnLine
IndentRequiresClause: true
RequiresExpressionIndentation: OuterScope

# Spaces
SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: true
SpaceBeforeAssignmentOperators: true
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeParens: ControlStatements
SpaceBeforeRangeBasedForLoopColon: true
SpaceInEmptyParentheses: false
SpacesBeforeTrailingComments: 2
SpacesInAngles:  false
SpacesInContainerLiterals: true
SpacesInCStyleCastParentheses: false
SpacesInParentheses: false
SpacesInSquareBrackets: false
SpacesInLineCommentPrefix:
  Minimum: 1

# Class
ConstructorInitializerIndentWidth: 8
AccessModifierOffset: -4
PackConstructorInitializers: Never
BreakInheritanceList: AfterColon
BreakConstructorInitializers: AfterColon
EmptyLineBeforeAccessModifier: Always

# Function
AlignAfterOpenBracket: AlwaysBreak
AllowAllArgumentsOnNextLine: true
AllowAllParametersOfDeclarationOnNextLine: true
BinPackArguments: false
BinPackParameters: false
IndentWrappedFunctionNames: false
LambdaBodyIndentation: Signature

# Includes & usings
SortUsingDeclarations: true
SortIncludes: CaseSensitive
IncludeIsMainRegex: '([-_](test|unittest|Test))?$'
IncludeBlocks:   Regroup
IncludeCategories:
  - Regex:           '^".*'
    Priority:        1
  - Regex:           '^<[a-z].*'
    Priority:        2

# Other
NamespaceIndentation: All
FixNamespaceComments: false
ForEachMacros:
  - foreach
  - BOOST_FOREACH
CommentPragmas:  '^ IWYU pragma:'
ExperimentalAutoDetectBinPacking: false
MacroBlockBegin: ''
MacroBlockEnd:   ''

# Formatting code in strings literals
BreakAfterJavaFieldAnnotations: false
JavaScriptQuotes: Leave
JavaScriptWrapImports: true
ObjCBinPackProtocolList: Never
ObjCBlockIndentWidth: 2
ObjCSpaceAfterProperty: false
ObjCSpaceBeforeProtocolList: true
RawStringFormats:
  - Language:        Cpp
    Delimiters:
      - cc
      - CC
      - cpp
      - Cpp
      - CPP
      - 'c++'
      - 'C++'
    CanonicalDelimiter: ''
    BasedOnStyle:    google
  - Language:        TextProto
    Delimiters:
      - pb
      - PB
      - proto
      - PROTO
    EnclosingFunctions:
      - EqualsProto
      - EquivToProto
      - PARSE_PARTIAL_TEXT_PROTO
      - PARSE_TEST_PROTO
      - PARSE_TEXT_PROTO
      - ParseTextOrDie
      - ParseTextProtoOrDie
    CanonicalDelimiter: ''
    BasedOnStyle:    google